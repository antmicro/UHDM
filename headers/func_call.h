/*
 Do not modify, auto-generated by model_gen.tcl

 Copyright 2019 Alain Dargelas

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/*
 * File:   func_call.h
 * Author:
 *
 * Created on December 14, 2019, 10:03 PM
 */

#ifndef UHDM_FUNC_CALL_H
#define UHDM_FUNC_CALL_H

#include "SymbolFactory.h"
#include "BaseClass.h"
#include "containers.h"
#include "uhdm.h"

namespace UHDM {

  class func_call : public tf_call {
  public:
    // Implicit constructor used to initialize all members,
    // comment: func_call();
    ~func_call() final {}
    func_call() = default;
    func_call(int type, function* fptr) : vpiFuncType_(type), function_(fptr) {}
    
    const BaseClass* VpiParent() const final { return vpiParent_; }

    bool VpiParent(BaseClass* data) final { vpiParent_ = data; if (data) uhdmParentType_ = data->UhdmType(); return true;}

    unsigned int UhdmParentType() const final { return uhdmParentType_; }

    bool UhdmParentType(unsigned int data) final { uhdmParentType_ = data; return true;}

    const std::string& VpiFile() const final;

    bool VpiFile(const std::string& data) final;

    unsigned int VpiLineNo() const final { return vpiLineNo_; }

    bool VpiLineNo(unsigned int data) final { vpiLineNo_ = data; return true;}

    int VpiFuncType() const { return vpiFuncType_; }

    bool VpiFuncType(int data) { vpiFuncType_ = data; return true;}

    const function* Function() const { return function_; }

    bool Function(function* data) { function_ = data; return true;}

    unsigned int VpiType() { return vpiFuncCall; }

    UHDM_OBJECT_TYPE UhdmType() const final { return uhdmfunc_call; }   
  private:
    
    BaseClass* vpiParent_;

    unsigned int uhdmParentType_;

    SymbolFactory::ID vpiFile_;

    unsigned int vpiLineNo_;

    int vpiFuncType_;

    function* function_;

  };

  
  class func_callFactory {
  friend Serializer;
  public:
  func_call* Make() {
    func_call* obj = new func_call();
    objects_.push_back(obj);
    return obj;
  }
  private:
    std::vector<func_call*> objects_;
  };
  
  
  class VectorOffunc_callFactory {
  friend Serializer;
  public:
  std::vector<func_call*>* Make() {
    std::vector<func_call*>* obj = new std::vector<func_call*>();
    objects_.push_back(obj);
    return obj;
  }
  private:
  std::vector<std::vector<func_call*>*> objects_;
  };

};

#endif

